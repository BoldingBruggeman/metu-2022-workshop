<?xml version="1.0" encoding="utf-8" ?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../client/config.xsd">
  <transports>
    <transport type="sqlite" path="samsun_sa.db"/>
  </transports>
  <executable path="/home/acar/.local/bin/gotm"/>
  <setup path="../"/>
  <parameters>
<parameter file="fabm.yaml" variable="instances/light/parameters/EPS0r" minimum="0.055299999999999995" maximum="0.1027" />
<parameter file="fabm.yaml" variable="instances/light/parameters/pEIR_eow" minimum="0.35" maximum="0.65" />
<parameter file="fabm.yaml" variable="instances/N1/parameters/c0" minimum="7e-06" maximum="1.3000000000000001e-05" />
<parameter file="fabm.yaml" variable="instances/N2/parameters/c0" minimum="7e-06" maximum="1.3000000000000001e-05" />
<parameter file="fabm.yaml" variable="instances/N3/parameters/c0" minimum="7e-06" maximum="1.3000000000000001e-05" />
<parameter file="fabm.yaml" variable="instances/N4/parameters/c0" minimum="7e-06" maximum="1.3000000000000001e-05" />
<parameter file="fabm.yaml" variable="instances/N5/parameters/s0" minimum="0.00020999999999999998" maximum="0.00039" />
<!-- <parameter file="fabm.yaml" variable="instances/O2/parameters/iswO2" minimum="1.4" maximum="2.6" /> -->
<!-- <parameter file="fabm.yaml" variable="instances/O3/parameters/iswCO2" minimum="0.7" maximum="1.3" /> -->
<!-- <parameter file="fabm.yaml" variable="instances/O3/parameters/iswASFLUX" minimum="0.7" maximum="1.3" /> -->
<!-- <parameter file="fabm.yaml" variable="instances/O3/parameters/iswtalk" minimum="1.4" maximum="2.6" /> -->
<!-- <parameter file="fabm.yaml" variable="instances/O3/parameters/pHscale" minimum="0.7" maximum="1.3" /> -->
<!-- <parameter file="fabm.yaml" variable="instances/O3/parameters/iswbioalk" minimum="0.7" maximum="1.3" /> -->
<parameter file="fabm.yaml" variable="instances/M4/parameters/rm" minimum="0.0" maximum="0.0" />
<parameter file="fabm.yaml" variable="instances/M4/parameters/rx" minimum="12.6" maximum="23.400000000000002" />
  </parameters>
  <targets>
     <target name="non-living_particulate_organic_carbon" expression="(((R4_c+R6_c+R8_c)*h)[:,141:].sum(axis=1)/h[:,141:].sum(axis=1)).mean(axis=0)" path="result.nc"/>

    <target name="trophic_efficiency" expression="((P1_c+P2_c+P3_c+P4_c)*h)[:,141:].sum(axis=1).mean(axis=0)/((Z4_c+Z5_c+Z6_c)*h)[:,141:].sum(axis=1).mean(axis=0)" path="result.nc"/>

    <target name="net_primary_production" expression="((P1_netPI+P2_netPI+P3_netPI+P4_netPI)*h)[:,141:].sum(axis=1).mean(axis=0)" path="result.nc"/>

    <target name="pH" expression="(((O3_pH)*h)[:,141:].sum(axis=1)/h[:,141:].sum(axis=1)).mean(axis=0)" path="result.nc"/>

    <target name="ox_bdy" expression="(O2_o+S1_u).argmin(axis=1).mean(axis=0)" path="result.nc"/> 
    <target name="subox_bdy" expression="abs(O2_o-10).argmin(axis=1).mean(axis=0)" path="result.nc"/> 

    <target name="large_over_all_phytoplankton" expression="((P1_c+P4_c)*h)[:,141:].sum(axis=1).mean(axis=0)/((P1_c+P2_c+P3_c+P4_c)*h)[:,141:].sum(axis=1).mean(axis=0)" path="result.nc"/>

    <target name="chl_max_in_0_to_60m" expression="( cumsum (((P1_Chl+P2_Chl+P3_Chl+P4_Chl)*h)[:,141:].sum(axis=1)/h[:,141:].sum(axis=1)) [3:]/3.  - cumsum (((P1_Chl+P2_Chl+P3_Chl+P4_Chl)*h)[:,141:].sum(axis=1)/h[:,141:].sum(axis=1)) [:-3]/3. ).max(axis=0)" path="result.nc"/>

    <target name="no3_max_below_45m" expression="(N3_n)[:,:145].mean(axis=0).max(axis=0)" path="result.nc"/>

    <target name="change_of_total_n" expression="int_change_in_total_nitrogen.mean(axis=0)" path="result.nc"/>

    <target name="timing_of_chl_max_in_5m" expression="( cumsum (((P1_Chl+P2_Chl+P3_Chl+P4_Chl)*h)[:,170:].sum(axis=1)/h[:,170:].sum(axis=1)) [3:]/3.  - cumsum (((P1_Chl+P2_Chl+P3_Chl+P4_Chl)*h)[:,170:].sum(axis=1)/h[:,170:].sum(axis=1)) [:-3]/3. ).argmax(axis=0)" path="result.nc"/>
    <target name="timing_of_micro_chl_max_in_5m" expression="( cumsum (((P1_Chl+P4_Chl)*h)[:,170:].sum(axis=1)/h[:,170:].sum(axis=1)) [3:]/3.  - cumsum (((P1_Chl+P4_Chl)*h)[:,170:].sum(axis=1)/h[:,170:].sum(axis=1)) [:-3]/3. ).argmax(axis=0)" path="result.nc"/>
    <target name="timing_of_nano_chl_max_in_5m" expression="( cumsum (((P2_Chl)*h)[:,170:].sum(axis=1)/h[:,170:].sum(axis=1)) [3:]/3.  - cumsum (((P2_Chl)*h)[:,170:].sum(axis=1)/h[:,170:].sum(axis=1)) [:-3]/3. ).argmax(axis=0)" path="result.nc"/>
    <target name="timing_of_pico_chl_max_in_5m" expression="( cumsum (((P3_Chl)*h)[:,170:].sum(axis=1)/h[:,170:].sum(axis=1)) [3:]/3.  - cumsum (((P3_Chl)*h)[:,170:].sum(axis=1)/h[:,170:].sum(axis=1)) [:-3]/3. ).argmax(axis=0)" path="result.nc"/>

    <target name="timing_of_chl_max_in_60m" expression="( cumsum (((P1_Chl+P2_Chl+P3_Chl+P4_Chl)*h)[:,141:].sum(axis=1)/h[:,141:].sum(axis=1)) [3:]/3.  - cumsum (((P1_Chl+P2_Chl+P3_Chl+P4_Chl)*h)[:,141:].sum(axis=1)/h[:,141:].sum(axis=1)) [:-3]/3. ).argmax(axis=0)" path="result.nc"/>

    <target name="depth_of_chl_max_in_0m_to_60m" expression="(P1_Chl+P2_Chl+P3_Chl+P4_Chl)[:,141:].mean(axis=0).argmax(axis=0)" path="result.nc"/>
  </targets>
</config>
